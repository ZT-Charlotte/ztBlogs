{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/yelee/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-2.jpg","path":"background/bg-2.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-3.jpg","path":"background/bg-3.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-4.jpg","path":"background/bg-4.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-5.jpg","path":"background/bg-5.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-6.jpg","path":"background/bg-6.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/AcFun.png","path":"img/AcFun.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/CSDN.png","path":"img/CSDN.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Coding.png","path":"img/Coding.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/LOFTER.png","path":"img/LOFTER.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Plunker.png","path":"img/Plunker.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Quora.png","path":"img/Quora.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/SegmentFault.png","path":"img/SegmentFault.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/TiddlyWiki.png","path":"img/TiddlyWiki.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/V2EX.png","path":"img/V2EX.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/bilibili.png","path":"img/bilibili.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/niconico.png","path":"img/niconico.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/博客园.png","path":"img/博客园.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/新浪微博.png","path":"img/新浪微博.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/知乎.png","path":"img/知乎.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/简书.png","path":"img/简书.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/网易云音乐.png","path":"img/网易云音乐.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/虾米音乐.png","path":"img/虾米音乐.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/豆瓣.png","path":"img/豆瓣.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","path":"js/GithubRepoWidget.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/instagram.js","path":"js/instagram.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/mobile.js","path":"js/mobile.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/pc.js","path":"js/pc.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/backup/bg-1.jpg","path":"background/backup/bg-1.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/backup/bg-2.jpg","path":"background/backup/bg-2.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/backup/bg-3.jpg","path":"background/backup/bg-3.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/backup/bg-4.jpg","path":"background/backup/bg-4.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/20201230证书.md","hash":"7cb6386cc3fe339d5dc003b1ff2494899484a49e","modified":1609317116236},{"_id":"source/about/index-1.md","hash":"d884b27f7eabc6a537d85f6fd5b8a23dd17e90ac","modified":1609317408495},{"_id":"source/about/index.md","hash":"a4c38ec8b31d352daf65da68c5f5da2f391685f3","modified":1609315874941},{"_id":"source/tag/index.md","hash":"89daaf7716b57fe6d6c446cb18fce57afe6091a3","modified":1609315896180},{"_id":"source/tags/index.md","hash":"6641bd4768c34a9acc6d18ab19b2e3c44322228d","modified":1609317504724},{"_id":"themes/yelee/.gitignore","hash":"79b4a9ac435bc5833a0bc461ebacb10908b34ed3","modified":1609317188273},{"_id":"themes/yelee/README.md","hash":"12bc9cdb68f51df81bcc36a5263e0a6c5860f646","modified":1609317188274},{"_id":"themes/yelee/_config.yml","hash":"bd29e7a57105145446cb8a4d4dfc103e21768215","modified":1609317400954},{"_id":"themes/yelee/package.json","hash":"0199dfb3d44cf520b67464817d13c44a7766b8d6","modified":1609317188292},{"_id":"themes/yelee/.github/ISSUE_TEMPLATE.md","hash":"ce083abf397c12747893a23e901d46558b53e0ad","modified":1609317188273},{"_id":"themes/yelee/languages/default.yml","hash":"3bdad891c90029447b4fbaedbbb11b8a59d06418","modified":1609317188275},{"_id":"themes/yelee/languages/en.yml","hash":"ff991c2c80d9ab69c984acb1c40480c8b98be2bc","modified":1609317188275},{"_id":"themes/yelee/languages/zh-Hans.yml","hash":"4fa4068a65089810e7dd95692f9157eb80c2e8de","modified":1609317188275},{"_id":"themes/yelee/languages/zh-Hant-HK.yml","hash":"bbc73dcd9170fe9efaab6fbbe1571886e0b8aa89","modified":1609317188276},{"_id":"themes/yelee/languages/zh-Hant-TW.yml","hash":"88b4678bba940bc270c7aea2debbf869ecf6cc18","modified":1609317188276},{"_id":"themes/yelee/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1609317188289},{"_id":"themes/yelee/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1609317188290},{"_id":"themes/yelee/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1609317188290},{"_id":"themes/yelee/layout/layout.ejs","hash":"3a4350f23a1286345f76c949466c97a7200dae8e","modified":1609317188290},{"_id":"themes/yelee/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1609317188291},{"_id":"themes/yelee/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1609317188291},{"_id":"themes/yelee/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1609317188292},{"_id":"themes/yelee/source/apple-touch-icon.png","hash":"c0fda117fa166d63b9eb690cc5e4fb2caaf493b3","modified":1609317188293},{"_id":"themes/yelee/layout/_partial/after-footer.ejs","hash":"748391b89b661fa1ed7da0b15ed6870981ec4dc3","modified":1609317188278},{"_id":"themes/yelee/layout/_partial/archive-post.ejs","hash":"0ecc2ad07b4abad80f564ac1858c50bcbdff34f8","modified":1609317188278},{"_id":"themes/yelee/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1609317188278},{"_id":"themes/yelee/layout/_partial/article.ejs","hash":"afd85b362d732fa9b439af7dc44b657d0d1aae3d","modified":1609317188279},{"_id":"themes/yelee/layout/_partial/background.ejs","hash":"aeef39abef66ee0bd6c9efe856eaeb1b81416d41","modified":1609317188279},{"_id":"themes/yelee/layout/_partial/footer.ejs","hash":"82653e3bbdc605b51e1b0a36e30f3ac1180c838e","modified":1609317188282},{"_id":"themes/yelee/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1609317188282},{"_id":"themes/yelee/layout/_partial/head.ejs","hash":"55e90c3d5de6d7ffcfe26c4dc22189a7a27b6651","modified":1609317188282},{"_id":"themes/yelee/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1609317188283},{"_id":"themes/yelee/layout/_partial/ie-updater.ejs","hash":"8d1e1f3953efbcf5ec84a451439a62a1c95b55d7","modified":1609317188283},{"_id":"themes/yelee/layout/_partial/left-col.ejs","hash":"90fd7c763faf8d64d58612f592cbacbefdaea161","modified":1609317188283},{"_id":"themes/yelee/layout/_partial/mathjax.ejs","hash":"ce868f8b2b5b377cadc270e3a5bb5826f8bf0dee","modified":1609317188284},{"_id":"themes/yelee/layout/_partial/mobile-nav.ejs","hash":"306be982577b0ef968f855d0dfeaab6b180b8a50","modified":1609317188284},{"_id":"themes/yelee/layout/_partial/open-in-new-tab.ejs","hash":"a59d4c768009dd621e741a29cf6446ebc2668fe9","modified":1609317188284},{"_id":"themes/yelee/layout/_partial/page.ejs","hash":"cfce60062cdb60893baeda7fa0266ae4086c2bc8","modified":1609317188285},{"_id":"themes/yelee/layout/_partial/post-nav-button.ejs","hash":"0a98bffdd14f6677721841c0ac4487a86c77266c","modified":1609317188285},{"_id":"themes/yelee/layout/_partial/scrolling-button.ejs","hash":"c5e1c3a8e1e6b0d927ac25a7fb8720ee7ac83ad8","modified":1609317188288},{"_id":"themes/yelee/layout/_partial/tab-title-change.ejs","hash":"7c4a7177e0c77de2d7607ca29fc395abebd34db7","modified":1609317188288},{"_id":"themes/yelee/layout/_partial/tag-cloud-page.ejs","hash":"c7b25ef136e129c948ac37d6ff19e8815ab9fee6","modified":1609317188289},{"_id":"themes/yelee/layout/_partial/toc.ejs","hash":"7ee88b1a98eea5cbd44c0f9a11b86b46aa2d6752","modified":1609317188289},{"_id":"themes/yelee/source/background/bg-1.jpg","hash":"9a5241de4c880f13a278f6980bf11d4dfb214d82","modified":1609317188296},{"_id":"themes/yelee/source/background/bg-2.jpg","hash":"d1e0b92e8fa822e44d185b5e1bf94ab47bc98a0a","modified":1609317188297},{"_id":"themes/yelee/source/background/bg-3.jpg","hash":"d476909f06fe8267c676952e3582bf9e9ff73585","modified":1609317188297},{"_id":"themes/yelee/source/background/bg-4.jpg","hash":"8e80d0b7786c3bf7b9648c0190719e78001e9eeb","modified":1609317188299},{"_id":"themes/yelee/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1609317188302},{"_id":"themes/yelee/source/css/_variables.styl","hash":"f429eb9bc9f0a270ec68c4f4c63903250746a01c","modified":1609317188313},{"_id":"themes/yelee/source/css/style.styl","hash":"b285f9a75abd09c7d06fe89e70f9e1819eac27dd","modified":1609317188313},{"_id":"themes/yelee/source/img/AcFun.png","hash":"df6b0fa39ced4dc988359fc7b7cd1e5403de08a6","modified":1609317188314},{"_id":"themes/yelee/source/img/CSDN.png","hash":"59f7d89eda8a7310a0ee1607e153c0829af7eb6e","modified":1609317188314},{"_id":"themes/yelee/source/img/Coding.png","hash":"afb4bce19bebf61e3c486fd5199369d6eb191b78","modified":1609317188314},{"_id":"themes/yelee/source/img/LOFTER.png","hash":"88670eaea8612839e9d6a40a3636e4231ab56c0f","modified":1609317188315},{"_id":"themes/yelee/source/img/Plunker.png","hash":"14a0054b9b4a0e459987f34b9ab48ab22dbe5cf9","modified":1609317188315},{"_id":"themes/yelee/source/img/Quora.png","hash":"1a624ade0d07f2482b21bef1e2a5ddd0110ba352","modified":1609317188315},{"_id":"themes/yelee/source/img/SegmentFault.png","hash":"1afbc7e575e2e9ed9404be84a3f92f7ca8345a9c","modified":1609317188316},{"_id":"themes/yelee/source/img/TiddlyWiki.png","hash":"b7f68f8f9c45561a9455aee0bfb80e35cae6f8df","modified":1609317188316},{"_id":"themes/yelee/source/img/V2EX.png","hash":"d0768de8555f9be0ee8ce956198cef454d4e4d7c","modified":1609317188317},{"_id":"themes/yelee/source/img/avatar.png","hash":"e4bca3d60087cd6e775d8e2aa2bf0d35e3859592","modified":1609317188317},{"_id":"themes/yelee/source/img/bilibili.png","hash":"be37b7e9a091c8547b8ee8b9d29583af8ded61c0","modified":1609317188317},{"_id":"themes/yelee/source/img/niconico.png","hash":"fabc7ca45e9ee5698db33a25de8b1f8a7c7d6723","modified":1609317188318},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","hash":"af987032f2171867bb58b165d2180eb5dcbea637","modified":1609317188318},{"_id":"themes/yelee/source/img/博客园.png","hash":"5ff6f4c9f1fc1695217a57436d58b246d9d2f197","modified":1609317188318},{"_id":"themes/yelee/source/img/新浪微博.png","hash":"7a145ed1daee0c172cda77098f4254fc21f9eeee","modified":1609317188319},{"_id":"themes/yelee/source/img/知乎.png","hash":"ed6d3c304789e112d09f40784fa6add1f1a38bd6","modified":1609317188319},{"_id":"themes/yelee/source/img/简书.png","hash":"5c91ee83cab4abe160240e09de345b6935c8cb37","modified":1609317188320},{"_id":"themes/yelee/source/img/网易云音乐.png","hash":"4fd1275fd988584811cf710207eb077f2306f271","modified":1609317188320},{"_id":"themes/yelee/source/img/虾米音乐.png","hash":"a0039b049779b1f37c0b0b91760943b7bf25c8f1","modified":1609317188321},{"_id":"themes/yelee/source/img/豆瓣.png","hash":"f1fc97f98612bcdf4a681542e5388483b40a5300","modified":1609317188321},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","hash":"5fb1bf6cf973062771ddf275ceeca5bc69c81c77","modified":1609317188322},{"_id":"themes/yelee/source/js/instagram.js","hash":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1609317188323},{"_id":"themes/yelee/source/js/main.js","hash":"369774a7ff45a2e5117a796330a04aeb50a61fdf","modified":1609317188323},{"_id":"themes/yelee/source/js/mobile.js","hash":"8abc32d18f16db56f51caad607cffb6ca756eca9","modified":1609317188323},{"_id":"themes/yelee/source/js/pc.js","hash":"bc289c5dc610e2a34d308daeb9adea96d01f7788","modified":1609317188324},{"_id":"themes/yelee/source/js/search.js","hash":"001e324844e63f3bfb6f60d173b9c6954127be0b","modified":1609317188324},{"_id":"themes/yelee/source/js/toc.js","hash":"973c1a4e2c9de8f4f662b99623027658fe6d94c2","modified":1609317188326},{"_id":"themes/yelee/layout/_partial/comments/click2show.ejs","hash":"ecc4d3ca997c6fd127e00fa2edf0158b925d1d3e","modified":1609317188280},{"_id":"themes/yelee/layout/_partial/comments/count-comment.ejs","hash":"ada2032e401b73b312c50b75bdbb8ee71d5a291e","modified":1609317188280},{"_id":"themes/yelee/layout/_partial/comments/disqus.ejs","hash":"df7ee469b648b12b5ee3104ef513d54cbb7418af","modified":1609317188280},{"_id":"themes/yelee/layout/_partial/comments/duoshuo.ejs","hash":"e7f12f1246a67a5b556c2d5b37dc78733f1cf15a","modified":1609317188281},{"_id":"themes/yelee/layout/_partial/comments/youyan.ejs","hash":"d150085faee4809ba50f69c55d904605699040cb","modified":1609317188281},{"_id":"themes/yelee/layout/_partial/post/category.ejs","hash":"08c8d98bc6a73d3f72a3b0b30521ff28e1b657a7","modified":1609317188286},{"_id":"themes/yelee/layout/_partial/post/date.ejs","hash":"329ed372296a86bce73ff8936af5601723fdd70a","modified":1609317188286},{"_id":"themes/yelee/layout/_partial/post/nav.ejs","hash":"6f531dbc9cc7ae42d2486d6707f826cfe7d9d8bc","modified":1609317188287},{"_id":"themes/yelee/layout/_partial/post/share.ejs","hash":"58c2db54a9867aaafe68a7f052b04701c7c3df0f","modified":1609317188287},{"_id":"themes/yelee/layout/_partial/post/tag.ejs","hash":"7d2693a1162bf26e4b1ae9b789e0b2a2637ddbd5","modified":1609317188287},{"_id":"themes/yelee/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1609317188288},{"_id":"themes/yelee/source/background/backup/bg-1.jpg","hash":"31d7bb15211000c05656899302f8ec9ee3de0e9f","modified":1609317188294},{"_id":"themes/yelee/source/background/backup/bg-2.jpg","hash":"7ae358f3ab8b41558444053400e796c41b3ba0e2","modified":1609317188294},{"_id":"themes/yelee/source/background/backup/bg-3.jpg","hash":"1a06d3a660bfb99b62d760e4e1e09de168a4c74c","modified":1609317188295},{"_id":"themes/yelee/source/css/_partial/archive.styl","hash":"102c23dbb6cde3cbfca3b151c742e0d77911186e","modified":1609317188303},{"_id":"themes/yelee/source/background/backup/bg-4.jpg","hash":"6df1383d0f6134016d844df9abb740a6e0c0b2c5","modified":1609317188296},{"_id":"themes/yelee/source/css/_partial/article.styl","hash":"190828c822096bb3098a7d14c3340eb004057aa0","modified":1609317188303},{"_id":"themes/yelee/source/css/_partial/footer.styl","hash":"a419108f1b820c59fcc56d218bfaaa4ffc4f1d4d","modified":1609317188307},{"_id":"themes/yelee/source/css/_partial/highlight.styl","hash":"4e34bf9340ce9b15d2d59fc4ea761d1d110927cf","modified":1609317188307},{"_id":"themes/yelee/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1609317188307},{"_id":"themes/yelee/source/css/_partial/instagram.styl","hash":"a093443add2f529396d6b6bdef1675bc3acf3958","modified":1609317188308},{"_id":"themes/yelee/source/css/_partial/main.styl","hash":"405db411896f3c7de9e7dd27e58c920fb90b9834","modified":1609317188308},{"_id":"themes/yelee/source/css/_partial/mobile-slider.styl","hash":"39db458d4e9f6973afc1390b4d3fc0291fff4c40","modified":1609317188309},{"_id":"themes/yelee/source/css/_partial/mobile.styl","hash":"dfb20f2515a26d75e42fe09741e91cc889426b11","modified":1609317188309},{"_id":"themes/yelee/source/css/_partial/page.styl","hash":"ca3f871adf8fdb296e4394070605dded53d93cb2","modified":1609317188310},{"_id":"themes/yelee/source/css/_partial/scroll.styl","hash":"f32deb9192568a2ea789d77a23a08d07f4e57d59","modified":1609317188310},{"_id":"themes/yelee/source/css/_partial/search.styl","hash":"688ff535a6005be02d947be75d22cfe1f8ce72cd","modified":1609317188310},{"_id":"themes/yelee/source/css/_partial/share.styl","hash":"88c1277397b71eb1f3473a94d9542314f983cd09","modified":1609317188310},{"_id":"themes/yelee/source/css/_partial/tagcloud.styl","hash":"b38b275728bfe11809defe1077b03cb423c3c92f","modified":1609317188311},{"_id":"themes/yelee/source/css/_partial/toc.styl","hash":"8f2a057dc072285093e37f1f645e9cb53608642f","modified":1609317188311},{"_id":"themes/yelee/source/css/_partial/wheelmenu.styl","hash":"9e57421eab562ea13d0ed2b2e1415eee79fa23d0","modified":1609317188312},{"_id":"themes/yelee/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1609317188312},{"_id":"themes/yelee/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1609317188312},{"_id":"themes/yelee/source/css/_partial/customise/blockquote.styl","hash":"5e6edb9ad49288743ed550a2bd8c9a3c8e208455","modified":1609317188304},{"_id":"themes/yelee/source/css/_partial/customise/code-block.styl","hash":"4db1a992a06fd92b779f0afc9bb8bb3667bdb101","modified":1609317188304},{"_id":"themes/yelee/source/css/_partial/customise/color-scheme.styl","hash":"b58262a9f8903e75df431291745e19ccd8ff243a","modified":1609317188305},{"_id":"themes/yelee/source/css/_partial/customise/heading.styl","hash":"c29799f09ebd87767fd9cc3b1fa795db44a94670","modified":1609317188305},{"_id":"themes/yelee/source/css/_partial/customise/inline-code.styl","hash":"a15292b2b3541ea022c0fb7441875192dee5ad9d","modified":1609317188305},{"_id":"themes/yelee/source/css/_partial/customise/list.styl","hash":"7db683e2837a078ad7817fb88914535588e49cfa","modified":1609317188306},{"_id":"themes/yelee/source/css/_partial/customise/social-icon.styl","hash":"bfa5c863d474266f32a570e34a0effda964f7f40","modified":1609317188306},{"_id":"themes/yelee/source/background/bg-5.jpg","hash":"e4a3631b6b0f94ebce30a6f01ecb2b6ed7cfdb0b","modified":1609317188300},{"_id":"themes/yelee/source/background/bg-6.jpg","hash":"51b427f07ffc6f2ad97651f23cc16e8f19ed02f9","modified":1609317188302},{"_id":"public/about/index-1.html","hash":"2df68dcb37ffba3a3d2226229728e7528dd7b44f","modified":1609317535702},{"_id":"public/about/index.html","hash":"3d0aa5b77de6bbc526f315bd119d31f5c9d7881f","modified":1609317535702},{"_id":"public/tag/index.html","hash":"5ca45793ba0d8272b915ae10c59a98b1c8a47bc5","modified":1609317535702},{"_id":"public/tags/index.html","hash":"8fd90d5c867801459c70c718bf1bf6d5547e2389","modified":1609317535702},{"_id":"public/2020/12/30/20201230证书/index.html","hash":"cabefb66c7a6c4c7ace086ef68ae44ea404feda2","modified":1609317535702},{"_id":"public/archives/index.html","hash":"9e199f769c6e4d0321aebad9a48809b8ae821e5b","modified":1609317535702},{"_id":"public/archives/2020/index.html","hash":"8ab0a49b409cde6eef524f3dc8eb1dc8ee0913d5","modified":1609317535702},{"_id":"public/archives/2020/12/index.html","hash":"1872f33c6246bc016273aa235b31e9f803d9b2c7","modified":1609317535702},{"_id":"public/index.html","hash":"c0eb4f4005aea6b3ddabe250ea5bc85f0e14644e","modified":1609317535702},{"_id":"public/tags/http通信/index.html","hash":"e51de6ad67152d35d345ead10dbcdbd221298104","modified":1609317535702},{"_id":"public/tags/安全加密/index.html","hash":"bdc384d0c11af5869b5d1554761d72c0c55e9547","modified":1609317535702},{"_id":"public/apple-touch-icon.png","hash":"c0fda117fa166d63b9eb690cc5e4fb2caaf493b3","modified":1609317535702},{"_id":"public/background/bg-1.jpg","hash":"9a5241de4c880f13a278f6980bf11d4dfb214d82","modified":1609317535702},{"_id":"public/background/bg-2.jpg","hash":"d1e0b92e8fa822e44d185b5e1bf94ab47bc98a0a","modified":1609317535702},{"_id":"public/background/bg-3.jpg","hash":"d476909f06fe8267c676952e3582bf9e9ff73585","modified":1609317535702},{"_id":"public/background/bg-4.jpg","hash":"8e80d0b7786c3bf7b9648c0190719e78001e9eeb","modified":1609317535702},{"_id":"public/img/AcFun.png","hash":"df6b0fa39ced4dc988359fc7b7cd1e5403de08a6","modified":1609317535702},{"_id":"public/img/CSDN.png","hash":"59f7d89eda8a7310a0ee1607e153c0829af7eb6e","modified":1609317535702},{"_id":"public/img/Coding.png","hash":"afb4bce19bebf61e3c486fd5199369d6eb191b78","modified":1609317535702},{"_id":"public/img/LOFTER.png","hash":"88670eaea8612839e9d6a40a3636e4231ab56c0f","modified":1609317535702},{"_id":"public/img/Plunker.png","hash":"14a0054b9b4a0e459987f34b9ab48ab22dbe5cf9","modified":1609317535702},{"_id":"public/img/Quora.png","hash":"1a624ade0d07f2482b21bef1e2a5ddd0110ba352","modified":1609317535702},{"_id":"public/img/SegmentFault.png","hash":"1afbc7e575e2e9ed9404be84a3f92f7ca8345a9c","modified":1609317535702},{"_id":"public/img/TiddlyWiki.png","hash":"b7f68f8f9c45561a9455aee0bfb80e35cae6f8df","modified":1609317535702},{"_id":"public/img/V2EX.png","hash":"d0768de8555f9be0ee8ce956198cef454d4e4d7c","modified":1609317535702},{"_id":"public/img/avatar.png","hash":"e4bca3d60087cd6e775d8e2aa2bf0d35e3859592","modified":1609317535702},{"_id":"public/img/bilibili.png","hash":"be37b7e9a091c8547b8ee8b9d29583af8ded61c0","modified":1609317535702},{"_id":"public/img/niconico.png","hash":"fabc7ca45e9ee5698db33a25de8b1f8a7c7d6723","modified":1609317535702},{"_id":"public/img/scrollbar_arrow.png","hash":"af987032f2171867bb58b165d2180eb5dcbea637","modified":1609317535702},{"_id":"public/img/博客园.png","hash":"5ff6f4c9f1fc1695217a57436d58b246d9d2f197","modified":1609317535702},{"_id":"public/img/新浪微博.png","hash":"7a145ed1daee0c172cda77098f4254fc21f9eeee","modified":1609317535702},{"_id":"public/img/知乎.png","hash":"ed6d3c304789e112d09f40784fa6add1f1a38bd6","modified":1609317535702},{"_id":"public/img/简书.png","hash":"5c91ee83cab4abe160240e09de345b6935c8cb37","modified":1609317535702},{"_id":"public/img/网易云音乐.png","hash":"4fd1275fd988584811cf710207eb077f2306f271","modified":1609317535702},{"_id":"public/img/虾米音乐.png","hash":"a0039b049779b1f37c0b0b91760943b7bf25c8f1","modified":1609317535702},{"_id":"public/img/豆瓣.png","hash":"f1fc97f98612bcdf4a681542e5388483b40a5300","modified":1609317535702},{"_id":"public/background/backup/bg-1.jpg","hash":"31d7bb15211000c05656899302f8ec9ee3de0e9f","modified":1609317535702},{"_id":"public/background/backup/bg-2.jpg","hash":"7ae358f3ab8b41558444053400e796c41b3ba0e2","modified":1609317535702},{"_id":"public/background/backup/bg-3.jpg","hash":"1a06d3a660bfb99b62d760e4e1e09de168a4c74c","modified":1609317535702},{"_id":"public/background/bg-5.jpg","hash":"e4a3631b6b0f94ebce30a6f01ecb2b6ed7cfdb0b","modified":1609317535702},{"_id":"public/background/bg-6.jpg","hash":"51b427f07ffc6f2ad97651f23cc16e8f19ed02f9","modified":1609317535702},{"_id":"public/background/backup/bg-4.jpg","hash":"6df1383d0f6134016d844df9abb740a6e0c0b2c5","modified":1609317535702},{"_id":"public/css/style.css","hash":"c74d893c37ce14b2a860080fd22ddcaa914113a0","modified":1609317535702},{"_id":"public/js/GithubRepoWidget.js","hash":"624e81a3b0e57495b0c0e0b3e056296c6e8ae5df","modified":1609317535702},{"_id":"public/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1609317535702},{"_id":"public/js/main.js","hash":"d58bbc593d94d48e85d4ebfb002910444080cb06","modified":1609317535702},{"_id":"public/js/mobile.js","hash":"0f4c1fcd6df47a196ed9495c225173402aa7d769","modified":1609317535702},{"_id":"public/js/pc.js","hash":"19a1660b10358046e7a1f398284491519b2ffd47","modified":1609317535702},{"_id":"public/js/search.js","hash":"b456aaab98bbc3b0906f8a16d1e6e4f74dfcffda","modified":1609317535702},{"_id":"public/js/toc.js","hash":"72ba1228fc1a44df45b8f4b562eba78594f13016","modified":1609317535702}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2020-12-30T08:36:48.000Z","_content":"","source":"about/index-1.md","raw":"---\ntitle: about\ndate: 2020-12-30 16:36:48\n---\n","updated":"2020-12-30T08:36:48.495Z","path":"about/index-1.html","comments":1,"layout":"page","_id":"ckjb63y5n00001cvehg38fw08","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2020-12-30T08:11:14.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-12-30 16:11:14\n---\n","updated":"2020-12-30T08:11:14.941Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckjb63y5y00021cvecfrccwsk","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tag","date":"2020-12-30T08:11:36.000Z","_content":"","source":"tag/index.md","raw":"---\ntitle: tag\ndate: 2020-12-30 16:11:36\n---\n","updated":"2020-12-30T08:11:36.180Z","path":"tag/index.html","comments":1,"layout":"page","_id":"ckjb63y6100041cvebmdx30ct","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-12-30T08:38:24.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-12-30 16:38:24\n---\n","updated":"2020-12-30T08:38:24.724Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckjb63y6100051cve9c5c77jw","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"tls证书","date":"2020-12-30T08:16:50.000Z","_content":"\n\n# 证书\n\n  &nbsp;&nbsp;数字证书是Internet上唯一标识人员和资源的电子文件，证书使得两个实体之间可以安全、保密的通信。证书可以有很多类型：例如个人证书和服务器证书。任何个体/组织都可以充当CA，但难以取得client的信任。要权威的CA才行。\n  &nbsp;&nbsp;证书是**基于公钥加密**的，公钥加密使用数字密钥对对信息进行加密或编码，信息只能被目标收件人读取，收件人进行解密读取\n\n  - 公钥\n    - 拥有者对公钥进行分发并使得任何人都可以使用公钥\n  - 私钥\n\n&nbsp;&nbsp;数字证书受<font color=green>**x.509**</font>格式的规范约束：要验证证书领域中某个用户的身份，验证服务将使用x.509证书的通用名称字段作为主题名称来校验x.509证书\n\n<br/><br/>\n\n\n## 分类\n<br/>\n\n### 分类1\n\n  大家的加密效果都是一样的\n\n  1. 加密证书\n\n\t- DV： 域名型验证\n\n\t\t  > 面向个体用户，安全体系较弱，验证方式：向whois的邮箱发送邮件，按照邮件通过验证即可\n\t- OV： 组织型验证\n\n\t\t  > 面向企业用户，证书在DV基础上，还需要公司授权，CA通过拨打信息库中的公司电话确认\n\t- EV： 扩展型验证\n\n\t\t  > 在OV基础上，还需要公司提供金融机构的开户许可证，要求十分严格，并且价格十分昂贵\n 2. 签名证书\n\n    - 普通签名证书\n    - EV签名证书\n    \n    \n\n|      | 单域名           | 多域名                                         | 泛域名         | 多泛域名                           |\n| ---- | ---------------- | ---------------------------------------------- | -------------- | ---------------------------------- |\n| DV   | Y                | Y                                              | N              | N                                  |\n| OV   | Y                | Y                                              | Y              | Y                                  |\n| EV   | Y                | Y                                              | N              | N                                  |\n| 示例 | www.ss.com | www.ss.com<br />www.ss.cn<br />... | *.ss.com | *.ss.com<br />\\*.ss.cn |\n\n\n\n\n<br/>\n\n### 分类2\n\n1. `end-user`：包含用来加密传输数据公钥的证书，用于HTTPS中使用的证书\n\n2. `intermediates`：CA用来认证公钥持有者身份的证书，可以有很多级\n\n3. `root`：用来认证intermediates证书是合法证书的证书\n\n   > 保证end-user证书未被篡改\n\n\n<br/><br/>\n\n## 内容校验\n\n### 签发证书\n\n1. 撰写证书元信息：签发人、地址、时间、失效时间等\n2. 通过通用的HASH将信息摘要出来\n3. Hash摘要通过CA 私钥非对称加密，生成签名密文\n4. 将签名密文attach到文件证书上，变成签名过的证书\n\n\n\n### 验证证书内容\n\n1. 获取签发证书\n2. 解压后获取\"元数据\"和\"签名密文\"\n3. 使用同样的Hash数据应用到\"元数据\"获取摘要\n4. 将密文通过CA 公钥解密获取同样的摘要\n5. 比对摘要信息，完整性未被破坏则可信\n\n\n<br/>\n<font color=red>那如何保证公钥有效呢？即如何在SSL握手时保证收到的CA证书权威有效性呢？————————**证书链**</font>\n\n\n\n\n\n<br/><br/>\n\n## CA\n&nbsp;&nbsp;证书由证书授权机构的可信赖第三方CA发布：将验证证书持有者的身份并对证书进行签名，使得他人无法伪造或篡改证书。任何个体/组织都可以充当CA，但难以取得client的信任。要权威的CA才行。\n  证书通常包含：\n\n  - 公钥\n  - 持有者的信息\n  - 发布证书的CA名称\n  - 失效日期\n  - 指纹及指纹算法\n  - 签发者的数字签名及算法\n  - 版本号\n  - 序列号\n  - 根证书\n  - ...\n\n  [![image.png](https://i.postimg.cc/sxqsQ4fn/image.png)](https://postimg.cc/y3mw29Z9)\n\n\n\n\n<br/>\n\n### 获取\n\n1. CA付费购买\n2. [let's encrypt](https://letsencrypt.org/)免费获取ssl证书\n3. [openssl]()\n\n\n\n\n\n\n<br/><br/>\n## 证书链\n\n- 使用end-user certificates来确保加密传输过程数据的公钥不被篡改\n\n- 确保end-user certificates合法性，与公钥认证过程类似\n\n  - 获取end-user certificates ca证书\n\n  - 验证end-user certificates的签名\n\n  - 一般来说不会直接颁发该证书，而是授权给多个二级CA，二级又可以授权给三级....\n\n  - [Certificate Chain](https://support.dnsimple.com/articles/what-is-ssl-certificate-chain/)链式向上验证证书，直到<font color=red>**Root Certificates**</font>\n\n    > 除了可以下载安装外，devics例如浏览器，操作系统都会内置一些root certificates(trusted root certificates);\n    >\n    > 客户端一般需要自己携带，自己发现如golang中发出Https请求需要解析根ca证书添加到自己的证书校验池中\n\n\n\n   ![](https://i.postimg.cc/cJRy1N85/150174-f9328db2b780a17c.png)\n\n\n\n<br/>\n\n### 根证书\n\n自签名\n\n```shell\nopenssl genrsa -out ca.key 2048\nopenssl req -new -key ca.key -out ca.csr\nopenssl x509 -req -days 365 -in ca.csr -signkey ca.key -out ca,crt\n```\n\n\n\n\n<br/><br/>\n\n## 安全套接字层SSL\n\n  确保Internal通信和事务安全的最常见标准(例如HTTPS，基于SSL/TLS的HTTP)，HTTPS基于数字证书来确保服务器和客户机之前的安全保密通信。\n  - SSL握手\n    1. 浏览器通过网络发送请求安全会话的消息\n    2. 服务器通过发送证书(包括公钥)进行响应\n    3. 浏览器将检验服务器的证书是否有效，校验该证书是否由其证书位于浏览器数据库中的可信赖的CA签发的，并校验是否过期\n    4. 证书有效，浏览器生成一个一次性唯一的会话密钥，并使有服务器的公钥对会话密钥进行加密；\n    5. 浏览器将加密后的会话密钥发给服务器，服务器和浏览器都持有一份会话密钥\n    6. 服务器可以使用其专用密钥对消息进行解密，恢复会话密钥\n  - 开始通信\n\n\n<br/><br/><br/>\n\n# HTTPS\n\n## 单向认证(ssl)\n\n```mermaid\nsequenceDiagram\n\tparticipant Client\n\tparticipant Server\n\t\n\tClient->>Server: 发送客户端SSL版本信息\n\tServer->>Client: 返回SSL版本，随机数等信息及服务器公钥\n\tClient->>Client: 校验服务器证书是否合法，合法继续，否则告警\n\tClient->>Server: 客户端发送自己可支持的对称加密方案，供其选择\n\tServer->>Server: 服务端选择加密性高的加密方式\n\tServer->>Client: 将选择好的加密方式以明文方式发送\n\tClient->>Server: 产生随机码，作为对称加密密钥，使用服务端公钥加密后发送\n\tServer->>Server: 私钥解密，获取对称加密的密钥\n\tClient->>Server: 开始加密通信\n```\n\n单向认证中，client如何校验server证书有效性的呢？\n\n\n<br/><br/>\n\n\n## 双向认证(ssl)\n\n  额外增加了服务端对客户端的认证\n\n```mermaid\nsequenceDiagram\n\tparticipant Client\n\tparticipant Server\n\t\n\tClient->>Server: 发送客户端SSL版本信息\n\tServer->>Client: 返回SSL版本，随机数等信息及服务器公钥\n\tClient->>Client: 校验服务器证书是否合法，合法继续，否则告警\n\t\n\tClient->>Server: 校验通过后，将自己的证书及公钥发送到服务端\n\tServer->>Server: 服务端校验客户端证书，校验结束后获得客户端公钥\n\t\n\tClient->>Server: 客户端发送自己可支持的对称加密方案，供其选择\n\tServer->>Server: 服务端选择加密性高的加密方式\n\t\n\tServer->>Client: 将选择好的加密方案使用客户端公钥进行加密后发送给客户端\n\t\n\tClient->>Server: 客户端使用私钥解密，产生随机码，作为对称加密密钥，使用服务端公钥加密后发送\n\tServer->>Server: 私钥解密，获取对称加密的密钥\n\tClient->>Server: 开始加密通信\n```\n\n\n\n\n\n\n<br/><br/>\n## 数据流情况\n\nHTTPS和HTTP一样：\n\n1. 首先建立TCP连接\n2. 建立之后不是立即发出HTTP请求所要具体资源\n3. 也没有建立真实的TLS/SSL连接，只是在刚刚建立好的TCP连接上，包裹上一层加密协议而已\n4. 在TLS连接协议中交换数据证书\n\n\n\n![](https://pic.downk.cc/item/5fe98f2a3ffa7d37b3bd7f43.jpg)\n\n\n\n\n\n\n\n","source":"_posts/20201230证书.md","raw":"---\ntitle: tls证书\ndate: 2020-12-30 16:16:50\ntags:\n  - http通信\n  - 安全加密\n---\n\n\n# 证书\n\n  &nbsp;&nbsp;数字证书是Internet上唯一标识人员和资源的电子文件，证书使得两个实体之间可以安全、保密的通信。证书可以有很多类型：例如个人证书和服务器证书。任何个体/组织都可以充当CA，但难以取得client的信任。要权威的CA才行。\n  &nbsp;&nbsp;证书是**基于公钥加密**的，公钥加密使用数字密钥对对信息进行加密或编码，信息只能被目标收件人读取，收件人进行解密读取\n\n  - 公钥\n    - 拥有者对公钥进行分发并使得任何人都可以使用公钥\n  - 私钥\n\n&nbsp;&nbsp;数字证书受<font color=green>**x.509**</font>格式的规范约束：要验证证书领域中某个用户的身份，验证服务将使用x.509证书的通用名称字段作为主题名称来校验x.509证书\n\n<br/><br/>\n\n\n## 分类\n<br/>\n\n### 分类1\n\n  大家的加密效果都是一样的\n\n  1. 加密证书\n\n\t- DV： 域名型验证\n\n\t\t  > 面向个体用户，安全体系较弱，验证方式：向whois的邮箱发送邮件，按照邮件通过验证即可\n\t- OV： 组织型验证\n\n\t\t  > 面向企业用户，证书在DV基础上，还需要公司授权，CA通过拨打信息库中的公司电话确认\n\t- EV： 扩展型验证\n\n\t\t  > 在OV基础上，还需要公司提供金融机构的开户许可证，要求十分严格，并且价格十分昂贵\n 2. 签名证书\n\n    - 普通签名证书\n    - EV签名证书\n    \n    \n\n|      | 单域名           | 多域名                                         | 泛域名         | 多泛域名                           |\n| ---- | ---------------- | ---------------------------------------------- | -------------- | ---------------------------------- |\n| DV   | Y                | Y                                              | N              | N                                  |\n| OV   | Y                | Y                                              | Y              | Y                                  |\n| EV   | Y                | Y                                              | N              | N                                  |\n| 示例 | www.ss.com | www.ss.com<br />www.ss.cn<br />... | *.ss.com | *.ss.com<br />\\*.ss.cn |\n\n\n\n\n<br/>\n\n### 分类2\n\n1. `end-user`：包含用来加密传输数据公钥的证书，用于HTTPS中使用的证书\n\n2. `intermediates`：CA用来认证公钥持有者身份的证书，可以有很多级\n\n3. `root`：用来认证intermediates证书是合法证书的证书\n\n   > 保证end-user证书未被篡改\n\n\n<br/><br/>\n\n## 内容校验\n\n### 签发证书\n\n1. 撰写证书元信息：签发人、地址、时间、失效时间等\n2. 通过通用的HASH将信息摘要出来\n3. Hash摘要通过CA 私钥非对称加密，生成签名密文\n4. 将签名密文attach到文件证书上，变成签名过的证书\n\n\n\n### 验证证书内容\n\n1. 获取签发证书\n2. 解压后获取\"元数据\"和\"签名密文\"\n3. 使用同样的Hash数据应用到\"元数据\"获取摘要\n4. 将密文通过CA 公钥解密获取同样的摘要\n5. 比对摘要信息，完整性未被破坏则可信\n\n\n<br/>\n<font color=red>那如何保证公钥有效呢？即如何在SSL握手时保证收到的CA证书权威有效性呢？————————**证书链**</font>\n\n\n\n\n\n<br/><br/>\n\n## CA\n&nbsp;&nbsp;证书由证书授权机构的可信赖第三方CA发布：将验证证书持有者的身份并对证书进行签名，使得他人无法伪造或篡改证书。任何个体/组织都可以充当CA，但难以取得client的信任。要权威的CA才行。\n  证书通常包含：\n\n  - 公钥\n  - 持有者的信息\n  - 发布证书的CA名称\n  - 失效日期\n  - 指纹及指纹算法\n  - 签发者的数字签名及算法\n  - 版本号\n  - 序列号\n  - 根证书\n  - ...\n\n  [![image.png](https://i.postimg.cc/sxqsQ4fn/image.png)](https://postimg.cc/y3mw29Z9)\n\n\n\n\n<br/>\n\n### 获取\n\n1. CA付费购买\n2. [let's encrypt](https://letsencrypt.org/)免费获取ssl证书\n3. [openssl]()\n\n\n\n\n\n\n<br/><br/>\n## 证书链\n\n- 使用end-user certificates来确保加密传输过程数据的公钥不被篡改\n\n- 确保end-user certificates合法性，与公钥认证过程类似\n\n  - 获取end-user certificates ca证书\n\n  - 验证end-user certificates的签名\n\n  - 一般来说不会直接颁发该证书，而是授权给多个二级CA，二级又可以授权给三级....\n\n  - [Certificate Chain](https://support.dnsimple.com/articles/what-is-ssl-certificate-chain/)链式向上验证证书，直到<font color=red>**Root Certificates**</font>\n\n    > 除了可以下载安装外，devics例如浏览器，操作系统都会内置一些root certificates(trusted root certificates);\n    >\n    > 客户端一般需要自己携带，自己发现如golang中发出Https请求需要解析根ca证书添加到自己的证书校验池中\n\n\n\n   ![](https://i.postimg.cc/cJRy1N85/150174-f9328db2b780a17c.png)\n\n\n\n<br/>\n\n### 根证书\n\n自签名\n\n```shell\nopenssl genrsa -out ca.key 2048\nopenssl req -new -key ca.key -out ca.csr\nopenssl x509 -req -days 365 -in ca.csr -signkey ca.key -out ca,crt\n```\n\n\n\n\n<br/><br/>\n\n## 安全套接字层SSL\n\n  确保Internal通信和事务安全的最常见标准(例如HTTPS，基于SSL/TLS的HTTP)，HTTPS基于数字证书来确保服务器和客户机之前的安全保密通信。\n  - SSL握手\n    1. 浏览器通过网络发送请求安全会话的消息\n    2. 服务器通过发送证书(包括公钥)进行响应\n    3. 浏览器将检验服务器的证书是否有效，校验该证书是否由其证书位于浏览器数据库中的可信赖的CA签发的，并校验是否过期\n    4. 证书有效，浏览器生成一个一次性唯一的会话密钥，并使有服务器的公钥对会话密钥进行加密；\n    5. 浏览器将加密后的会话密钥发给服务器，服务器和浏览器都持有一份会话密钥\n    6. 服务器可以使用其专用密钥对消息进行解密，恢复会话密钥\n  - 开始通信\n\n\n<br/><br/><br/>\n\n# HTTPS\n\n## 单向认证(ssl)\n\n```mermaid\nsequenceDiagram\n\tparticipant Client\n\tparticipant Server\n\t\n\tClient->>Server: 发送客户端SSL版本信息\n\tServer->>Client: 返回SSL版本，随机数等信息及服务器公钥\n\tClient->>Client: 校验服务器证书是否合法，合法继续，否则告警\n\tClient->>Server: 客户端发送自己可支持的对称加密方案，供其选择\n\tServer->>Server: 服务端选择加密性高的加密方式\n\tServer->>Client: 将选择好的加密方式以明文方式发送\n\tClient->>Server: 产生随机码，作为对称加密密钥，使用服务端公钥加密后发送\n\tServer->>Server: 私钥解密，获取对称加密的密钥\n\tClient->>Server: 开始加密通信\n```\n\n单向认证中，client如何校验server证书有效性的呢？\n\n\n<br/><br/>\n\n\n## 双向认证(ssl)\n\n  额外增加了服务端对客户端的认证\n\n```mermaid\nsequenceDiagram\n\tparticipant Client\n\tparticipant Server\n\t\n\tClient->>Server: 发送客户端SSL版本信息\n\tServer->>Client: 返回SSL版本，随机数等信息及服务器公钥\n\tClient->>Client: 校验服务器证书是否合法，合法继续，否则告警\n\t\n\tClient->>Server: 校验通过后，将自己的证书及公钥发送到服务端\n\tServer->>Server: 服务端校验客户端证书，校验结束后获得客户端公钥\n\t\n\tClient->>Server: 客户端发送自己可支持的对称加密方案，供其选择\n\tServer->>Server: 服务端选择加密性高的加密方式\n\t\n\tServer->>Client: 将选择好的加密方案使用客户端公钥进行加密后发送给客户端\n\t\n\tClient->>Server: 客户端使用私钥解密，产生随机码，作为对称加密密钥，使用服务端公钥加密后发送\n\tServer->>Server: 私钥解密，获取对称加密的密钥\n\tClient->>Server: 开始加密通信\n```\n\n\n\n\n\n\n<br/><br/>\n## 数据流情况\n\nHTTPS和HTTP一样：\n\n1. 首先建立TCP连接\n2. 建立之后不是立即发出HTTP请求所要具体资源\n3. 也没有建立真实的TLS/SSL连接，只是在刚刚建立好的TCP连接上，包裹上一层加密协议而已\n4. 在TLS连接协议中交换数据证书\n\n\n\n![](https://pic.downk.cc/item/5fe98f2a3ffa7d37b3bd7f43.jpg)\n\n\n\n\n\n\n\n","slug":"20201230证书","published":1,"updated":"2020-12-30T08:31:56.236Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjb63y5t00011cve4uwgav38","content":"<h1 id=\"证书\"><a href=\"#证书\" class=\"headerlink\" title=\"证书\"></a>证书</h1><p>  &nbsp;&nbsp;数字证书是Internet上唯一标识人员和资源的电子文件，证书使得两个实体之间可以安全、保密的通信。证书可以有很多类型：例如个人证书和服务器证书。任何个体/组织都可以充当CA，但难以取得client的信任。要权威的CA才行。<br>  &nbsp;&nbsp;证书是<strong>基于公钥加密</strong>的，公钥加密使用数字密钥对对信息进行加密或编码，信息只能被目标收件人读取，收件人进行解密读取</p>\n<ul>\n<li>公钥<ul>\n<li>拥有者对公钥进行分发并使得任何人都可以使用公钥</li>\n</ul>\n</li>\n<li>私钥</li>\n</ul>\n<p>&nbsp;&nbsp;数字证书受<font color=green><strong>x.509</strong></font>格式的规范约束：要验证证书领域中某个用户的身份，验证服务将使用x.509证书的通用名称字段作为主题名称来校验x.509证书</p>\n<p><br/><br/></p>\n<h2 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h2><br/>\n\n<h3 id=\"分类1\"><a href=\"#分类1\" class=\"headerlink\" title=\"分类1\"></a>分类1</h3><p>  大家的加密效果都是一样的</p>\n<ol>\n<li><p>加密证书</p>\n<ul>\n<li><p>DV： 域名型验证</p>\n<blockquote>\n<p>面向个体用户，安全体系较弱，验证方式：向whois的邮箱发送邮件，按照邮件通过验证即可</p>\n</blockquote>\n</li>\n<li><p>OV： 组织型验证</p>\n<blockquote>\n<p>面向企业用户，证书在DV基础上，还需要公司授权，CA通过拨打信息库中的公司电话确认</p>\n</blockquote>\n</li>\n<li><p>EV： 扩展型验证</p>\n<blockquote>\n<p>在OV基础上，还需要公司提供金融机构的开户许可证，要求十分严格，并且价格十分昂贵</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>签名证书</p>\n<ul>\n<li>普通签名证书</li>\n<li>EV签名证书</li>\n</ul>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>单域名</th>\n<th>多域名</th>\n<th>泛域名</th>\n<th>多泛域名</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DV</td>\n<td>Y</td>\n<td>Y</td>\n<td>N</td>\n<td>N</td>\n</tr>\n<tr>\n<td>OV</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>EV</td>\n<td>Y</td>\n<td>Y</td>\n<td>N</td>\n<td>N</td>\n</tr>\n<tr>\n<td>示例</td>\n<td><a href=\"http://www.ss.com/\">www.ss.com</a></td>\n<td><a href=\"http://www.ss.com/\">www.ss.com</a><br /><a href=\"http://www.ss.cn/\">www.ss.cn</a><br />…</td>\n<td>*.ss.com</td>\n<td><em>.ss.com<br />\\</em>.ss.cn</td>\n</tr>\n</tbody></table>\n<br/>\n\n<h3 id=\"分类2\"><a href=\"#分类2\" class=\"headerlink\" title=\"分类2\"></a>分类2</h3><ol>\n<li><p><code>end-user</code>：包含用来加密传输数据公钥的证书，用于HTTPS中使用的证书</p>\n</li>\n<li><p><code>intermediates</code>：CA用来认证公钥持有者身份的证书，可以有很多级</p>\n</li>\n<li><p><code>root</code>：用来认证intermediates证书是合法证书的证书</p>\n<blockquote>\n<p>保证end-user证书未被篡改</p>\n</blockquote>\n</li>\n</ol>\n<p><br/><br/></p>\n<h2 id=\"内容校验\"><a href=\"#内容校验\" class=\"headerlink\" title=\"内容校验\"></a>内容校验</h2><h3 id=\"签发证书\"><a href=\"#签发证书\" class=\"headerlink\" title=\"签发证书\"></a>签发证书</h3><ol>\n<li>撰写证书元信息：签发人、地址、时间、失效时间等</li>\n<li>通过通用的HASH将信息摘要出来</li>\n<li>Hash摘要通过CA 私钥非对称加密，生成签名密文</li>\n<li>将签名密文attach到文件证书上，变成签名过的证书</li>\n</ol>\n<h3 id=\"验证证书内容\"><a href=\"#验证证书内容\" class=\"headerlink\" title=\"验证证书内容\"></a>验证证书内容</h3><ol>\n<li>获取签发证书</li>\n<li>解压后获取”元数据”和”签名密文”</li>\n<li>使用同样的Hash数据应用到”元数据”获取摘要</li>\n<li>将密文通过CA 公钥解密获取同样的摘要</li>\n<li>比对摘要信息，完整性未被破坏则可信</li>\n</ol>\n<br/>\n<font color=red>那如何保证公钥有效呢？即如何在SSL握手时保证收到的CA证书权威有效性呢？————————**证书链**</font>\n\n\n\n\n\n<p><br/><br/></p>\n<h2 id=\"CA\"><a href=\"#CA\" class=\"headerlink\" title=\"CA\"></a>CA</h2><p>&nbsp;&nbsp;证书由证书授权机构的可信赖第三方CA发布：将验证证书持有者的身份并对证书进行签名，使得他人无法伪造或篡改证书。任何个体/组织都可以充当CA，但难以取得client的信任。要权威的CA才行。<br>  证书通常包含：</p>\n<ul>\n<li><p>公钥</p>\n</li>\n<li><p>持有者的信息</p>\n</li>\n<li><p>发布证书的CA名称</p>\n</li>\n<li><p>失效日期</p>\n</li>\n<li><p>指纹及指纹算法</p>\n</li>\n<li><p>签发者的数字签名及算法</p>\n</li>\n<li><p>版本号</p>\n</li>\n<li><p>序列号</p>\n</li>\n<li><p>根证书</p>\n</li>\n<li><p>…</p>\n<p><a href=\"https://postimg.cc/y3mw29Z9\"><img src=\"https://i.postimg.cc/sxqsQ4fn/image.png\" alt=\"image.png\"></a></p>\n</li>\n</ul>\n<br/>\n\n<h3 id=\"获取\"><a href=\"#获取\" class=\"headerlink\" title=\"获取\"></a>获取</h3><ol>\n<li>CA付费购买</li>\n<li><a href=\"https://letsencrypt.org/\">let’s encrypt</a>免费获取ssl证书</li>\n<li><a href=\"\">openssl</a></li>\n</ol>\n<p><br/><br/></p>\n<h2 id=\"证书链\"><a href=\"#证书链\" class=\"headerlink\" title=\"证书链\"></a>证书链</h2><ul>\n<li><p>使用end-user certificates来确保加密传输过程数据的公钥不被篡改</p>\n</li>\n<li><p>确保end-user certificates合法性，与公钥认证过程类似</p>\n<ul>\n<li><p>获取end-user certificates ca证书</p>\n</li>\n<li><p>验证end-user certificates的签名</p>\n</li>\n<li><p>一般来说不会直接颁发该证书，而是授权给多个二级CA，二级又可以授权给三级….</p>\n</li>\n<li><p><a href=\"https://support.dnsimple.com/articles/what-is-ssl-certificate-chain/\">Certificate Chain</a>链式向上验证证书，直到<font color=red><strong>Root Certificates</strong></font></p>\n<blockquote>\n<p>除了可以下载安装外，devics例如浏览器，操作系统都会内置一些root certificates(trusted root certificates);</p>\n<p>客户端一般需要自己携带，自己发现如golang中发出Https请求需要解析根ca证书添加到自己的证书校验池中</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<p>   <img src=\"https://i.postimg.cc/cJRy1N85/150174-f9328db2b780a17c.png\"></p>\n<br/>\n\n<h3 id=\"根证书\"><a href=\"#根证书\" class=\"headerlink\" title=\"根证书\"></a>根证书</h3><p>自签名</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl genrsa -out ca.key 2048</span><br><span class=\"line\">openssl req -new -key ca.key -out ca.csr</span><br><span class=\"line\">openssl x509 -req -days 365 -in ca.csr -signkey ca.key -out ca,crt</span><br></pre></td></tr></table></figure>\n\n\n\n<p><br/><br/></p>\n<h2 id=\"安全套接字层SSL\"><a href=\"#安全套接字层SSL\" class=\"headerlink\" title=\"安全套接字层SSL\"></a>安全套接字层SSL</h2><p>  确保Internal通信和事务安全的最常见标准(例如HTTPS，基于SSL/TLS的HTTP)，HTTPS基于数字证书来确保服务器和客户机之前的安全保密通信。</p>\n<ul>\n<li>SSL握手<ol>\n<li>浏览器通过网络发送请求安全会话的消息</li>\n<li>服务器通过发送证书(包括公钥)进行响应</li>\n<li>浏览器将检验服务器的证书是否有效，校验该证书是否由其证书位于浏览器数据库中的可信赖的CA签发的，并校验是否过期</li>\n<li>证书有效，浏览器生成一个一次性唯一的会话密钥，并使有服务器的公钥对会话密钥进行加密；</li>\n<li>浏览器将加密后的会话密钥发给服务器，服务器和浏览器都持有一份会话密钥</li>\n<li>服务器可以使用其专用密钥对消息进行解密，恢复会话密钥</li>\n</ol>\n</li>\n<li>开始通信</li>\n</ul>\n<p><br/><br/><br/></p>\n<h1 id=\"HTTPS\"><a href=\"#HTTPS\" class=\"headerlink\" title=\"HTTPS\"></a>HTTPS</h1><h2 id=\"单向认证-ssl\"><a href=\"#单向认证-ssl\" class=\"headerlink\" title=\"单向认证(ssl)\"></a>单向认证(ssl)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">\tparticipant Client</span><br><span class=\"line\">\tparticipant Server</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 发送客户端SSL版本信息</span><br><span class=\"line\">\tServer-&gt;&gt;Client: 返回SSL版本，随机数等信息及服务器公钥</span><br><span class=\"line\">\tClient-&gt;&gt;Client: 校验服务器证书是否合法，合法继续，否则告警</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 客户端发送自己可支持的对称加密方案，供其选择</span><br><span class=\"line\">\tServer-&gt;&gt;Server: 服务端选择加密性高的加密方式</span><br><span class=\"line\">\tServer-&gt;&gt;Client: 将选择好的加密方式以明文方式发送</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 产生随机码，作为对称加密密钥，使用服务端公钥加密后发送</span><br><span class=\"line\">\tServer-&gt;&gt;Server: 私钥解密，获取对称加密的密钥</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 开始加密通信</span><br></pre></td></tr></table></figure>\n<p>单向认证中，client如何校验server证书有效性的呢？</p>\n<p><br/><br/></p>\n<h2 id=\"双向认证-ssl\"><a href=\"#双向认证-ssl\" class=\"headerlink\" title=\"双向认证(ssl)\"></a>双向认证(ssl)</h2><p>  额外增加了服务端对客户端的认证</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">\tparticipant Client</span><br><span class=\"line\">\tparticipant Server</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 发送客户端SSL版本信息</span><br><span class=\"line\">\tServer-&gt;&gt;Client: 返回SSL版本，随机数等信息及服务器公钥</span><br><span class=\"line\">\tClient-&gt;&gt;Client: 校验服务器证书是否合法，合法继续，否则告警</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 校验通过后，将自己的证书及公钥发送到服务端</span><br><span class=\"line\">\tServer-&gt;&gt;Server: 服务端校验客户端证书，校验结束后获得客户端公钥</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 客户端发送自己可支持的对称加密方案，供其选择</span><br><span class=\"line\">\tServer-&gt;&gt;Server: 服务端选择加密性高的加密方式</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tServer-&gt;&gt;Client: 将选择好的加密方案使用客户端公钥进行加密后发送给客户端</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 客户端使用私钥解密，产生随机码，作为对称加密密钥，使用服务端公钥加密后发送</span><br><span class=\"line\">\tServer-&gt;&gt;Server: 私钥解密，获取对称加密的密钥</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 开始加密通信</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><br/><br/></p>\n<h2 id=\"数据流情况\"><a href=\"#数据流情况\" class=\"headerlink\" title=\"数据流情况\"></a>数据流情况</h2><p>HTTPS和HTTP一样：</p>\n<ol>\n<li>首先建立TCP连接</li>\n<li>建立之后不是立即发出HTTP请求所要具体资源</li>\n<li>也没有建立真实的TLS/SSL连接，只是在刚刚建立好的TCP连接上，包裹上一层加密协议而已</li>\n<li>在TLS连接协议中交换数据证书</li>\n</ol>\n<p><img src=\"https://pic.downk.cc/item/5fe98f2a3ffa7d37b3bd7f43.jpg\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"证书\"><a href=\"#证书\" class=\"headerlink\" title=\"证书\"></a>证书</h1><p>  &nbsp;&nbsp;数字证书是Internet上唯一标识人员和资源的电子文件，证书使得两个实体之间可以安全、保密的通信。证书可以有很多类型：例如个人证书和服务器证书。任何个体/组织都可以充当CA，但难以取得client的信任。要权威的CA才行。<br>  &nbsp;&nbsp;证书是<strong>基于公钥加密</strong>的，公钥加密使用数字密钥对对信息进行加密或编码，信息只能被目标收件人读取，收件人进行解密读取</p>\n<ul>\n<li>公钥<ul>\n<li>拥有者对公钥进行分发并使得任何人都可以使用公钥</li>\n</ul>\n</li>\n<li>私钥</li>\n</ul>\n<p>&nbsp;&nbsp;数字证书受<font color=green><strong>x.509</strong></font>格式的规范约束：要验证证书领域中某个用户的身份，验证服务将使用x.509证书的通用名称字段作为主题名称来校验x.509证书</p>\n<p><br/><br/></p>\n<h2 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h2><br/>\n\n<h3 id=\"分类1\"><a href=\"#分类1\" class=\"headerlink\" title=\"分类1\"></a>分类1</h3><p>  大家的加密效果都是一样的</p>\n<ol>\n<li><p>加密证书</p>\n<ul>\n<li><p>DV： 域名型验证</p>\n<blockquote>\n<p>面向个体用户，安全体系较弱，验证方式：向whois的邮箱发送邮件，按照邮件通过验证即可</p>\n</blockquote>\n</li>\n<li><p>OV： 组织型验证</p>\n<blockquote>\n<p>面向企业用户，证书在DV基础上，还需要公司授权，CA通过拨打信息库中的公司电话确认</p>\n</blockquote>\n</li>\n<li><p>EV： 扩展型验证</p>\n<blockquote>\n<p>在OV基础上，还需要公司提供金融机构的开户许可证，要求十分严格，并且价格十分昂贵</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>签名证书</p>\n<ul>\n<li>普通签名证书</li>\n<li>EV签名证书</li>\n</ul>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>单域名</th>\n<th>多域名</th>\n<th>泛域名</th>\n<th>多泛域名</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DV</td>\n<td>Y</td>\n<td>Y</td>\n<td>N</td>\n<td>N</td>\n</tr>\n<tr>\n<td>OV</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>EV</td>\n<td>Y</td>\n<td>Y</td>\n<td>N</td>\n<td>N</td>\n</tr>\n<tr>\n<td>示例</td>\n<td><a href=\"http://www.ss.com/\">www.ss.com</a></td>\n<td><a href=\"http://www.ss.com/\">www.ss.com</a><br /><a href=\"http://www.ss.cn/\">www.ss.cn</a><br />…</td>\n<td>*.ss.com</td>\n<td><em>.ss.com<br />\\</em>.ss.cn</td>\n</tr>\n</tbody></table>\n<br/>\n\n<h3 id=\"分类2\"><a href=\"#分类2\" class=\"headerlink\" title=\"分类2\"></a>分类2</h3><ol>\n<li><p><code>end-user</code>：包含用来加密传输数据公钥的证书，用于HTTPS中使用的证书</p>\n</li>\n<li><p><code>intermediates</code>：CA用来认证公钥持有者身份的证书，可以有很多级</p>\n</li>\n<li><p><code>root</code>：用来认证intermediates证书是合法证书的证书</p>\n<blockquote>\n<p>保证end-user证书未被篡改</p>\n</blockquote>\n</li>\n</ol>\n<p><br/><br/></p>\n<h2 id=\"内容校验\"><a href=\"#内容校验\" class=\"headerlink\" title=\"内容校验\"></a>内容校验</h2><h3 id=\"签发证书\"><a href=\"#签发证书\" class=\"headerlink\" title=\"签发证书\"></a>签发证书</h3><ol>\n<li>撰写证书元信息：签发人、地址、时间、失效时间等</li>\n<li>通过通用的HASH将信息摘要出来</li>\n<li>Hash摘要通过CA 私钥非对称加密，生成签名密文</li>\n<li>将签名密文attach到文件证书上，变成签名过的证书</li>\n</ol>\n<h3 id=\"验证证书内容\"><a href=\"#验证证书内容\" class=\"headerlink\" title=\"验证证书内容\"></a>验证证书内容</h3><ol>\n<li>获取签发证书</li>\n<li>解压后获取”元数据”和”签名密文”</li>\n<li>使用同样的Hash数据应用到”元数据”获取摘要</li>\n<li>将密文通过CA 公钥解密获取同样的摘要</li>\n<li>比对摘要信息，完整性未被破坏则可信</li>\n</ol>\n<br/>\n<font color=red>那如何保证公钥有效呢？即如何在SSL握手时保证收到的CA证书权威有效性呢？————————**证书链**</font>\n\n\n\n\n\n<p><br/><br/></p>\n<h2 id=\"CA\"><a href=\"#CA\" class=\"headerlink\" title=\"CA\"></a>CA</h2><p>&nbsp;&nbsp;证书由证书授权机构的可信赖第三方CA发布：将验证证书持有者的身份并对证书进行签名，使得他人无法伪造或篡改证书。任何个体/组织都可以充当CA，但难以取得client的信任。要权威的CA才行。<br>  证书通常包含：</p>\n<ul>\n<li><p>公钥</p>\n</li>\n<li><p>持有者的信息</p>\n</li>\n<li><p>发布证书的CA名称</p>\n</li>\n<li><p>失效日期</p>\n</li>\n<li><p>指纹及指纹算法</p>\n</li>\n<li><p>签发者的数字签名及算法</p>\n</li>\n<li><p>版本号</p>\n</li>\n<li><p>序列号</p>\n</li>\n<li><p>根证书</p>\n</li>\n<li><p>…</p>\n<p><a href=\"https://postimg.cc/y3mw29Z9\"><img src=\"https://i.postimg.cc/sxqsQ4fn/image.png\" alt=\"image.png\"></a></p>\n</li>\n</ul>\n<br/>\n\n<h3 id=\"获取\"><a href=\"#获取\" class=\"headerlink\" title=\"获取\"></a>获取</h3><ol>\n<li>CA付费购买</li>\n<li><a href=\"https://letsencrypt.org/\">let’s encrypt</a>免费获取ssl证书</li>\n<li><a href=\"\">openssl</a></li>\n</ol>\n<p><br/><br/></p>\n<h2 id=\"证书链\"><a href=\"#证书链\" class=\"headerlink\" title=\"证书链\"></a>证书链</h2><ul>\n<li><p>使用end-user certificates来确保加密传输过程数据的公钥不被篡改</p>\n</li>\n<li><p>确保end-user certificates合法性，与公钥认证过程类似</p>\n<ul>\n<li><p>获取end-user certificates ca证书</p>\n</li>\n<li><p>验证end-user certificates的签名</p>\n</li>\n<li><p>一般来说不会直接颁发该证书，而是授权给多个二级CA，二级又可以授权给三级….</p>\n</li>\n<li><p><a href=\"https://support.dnsimple.com/articles/what-is-ssl-certificate-chain/\">Certificate Chain</a>链式向上验证证书，直到<font color=red><strong>Root Certificates</strong></font></p>\n<blockquote>\n<p>除了可以下载安装外，devics例如浏览器，操作系统都会内置一些root certificates(trusted root certificates);</p>\n<p>客户端一般需要自己携带，自己发现如golang中发出Https请求需要解析根ca证书添加到自己的证书校验池中</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<p>   <img src=\"https://i.postimg.cc/cJRy1N85/150174-f9328db2b780a17c.png\"></p>\n<br/>\n\n<h3 id=\"根证书\"><a href=\"#根证书\" class=\"headerlink\" title=\"根证书\"></a>根证书</h3><p>自签名</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl genrsa -out ca.key 2048</span><br><span class=\"line\">openssl req -new -key ca.key -out ca.csr</span><br><span class=\"line\">openssl x509 -req -days 365 -in ca.csr -signkey ca.key -out ca,crt</span><br></pre></td></tr></table></figure>\n\n\n\n<p><br/><br/></p>\n<h2 id=\"安全套接字层SSL\"><a href=\"#安全套接字层SSL\" class=\"headerlink\" title=\"安全套接字层SSL\"></a>安全套接字层SSL</h2><p>  确保Internal通信和事务安全的最常见标准(例如HTTPS，基于SSL/TLS的HTTP)，HTTPS基于数字证书来确保服务器和客户机之前的安全保密通信。</p>\n<ul>\n<li>SSL握手<ol>\n<li>浏览器通过网络发送请求安全会话的消息</li>\n<li>服务器通过发送证书(包括公钥)进行响应</li>\n<li>浏览器将检验服务器的证书是否有效，校验该证书是否由其证书位于浏览器数据库中的可信赖的CA签发的，并校验是否过期</li>\n<li>证书有效，浏览器生成一个一次性唯一的会话密钥，并使有服务器的公钥对会话密钥进行加密；</li>\n<li>浏览器将加密后的会话密钥发给服务器，服务器和浏览器都持有一份会话密钥</li>\n<li>服务器可以使用其专用密钥对消息进行解密，恢复会话密钥</li>\n</ol>\n</li>\n<li>开始通信</li>\n</ul>\n<p><br/><br/><br/></p>\n<h1 id=\"HTTPS\"><a href=\"#HTTPS\" class=\"headerlink\" title=\"HTTPS\"></a>HTTPS</h1><h2 id=\"单向认证-ssl\"><a href=\"#单向认证-ssl\" class=\"headerlink\" title=\"单向认证(ssl)\"></a>单向认证(ssl)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">\tparticipant Client</span><br><span class=\"line\">\tparticipant Server</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 发送客户端SSL版本信息</span><br><span class=\"line\">\tServer-&gt;&gt;Client: 返回SSL版本，随机数等信息及服务器公钥</span><br><span class=\"line\">\tClient-&gt;&gt;Client: 校验服务器证书是否合法，合法继续，否则告警</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 客户端发送自己可支持的对称加密方案，供其选择</span><br><span class=\"line\">\tServer-&gt;&gt;Server: 服务端选择加密性高的加密方式</span><br><span class=\"line\">\tServer-&gt;&gt;Client: 将选择好的加密方式以明文方式发送</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 产生随机码，作为对称加密密钥，使用服务端公钥加密后发送</span><br><span class=\"line\">\tServer-&gt;&gt;Server: 私钥解密，获取对称加密的密钥</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 开始加密通信</span><br></pre></td></tr></table></figure>\n<p>单向认证中，client如何校验server证书有效性的呢？</p>\n<p><br/><br/></p>\n<h2 id=\"双向认证-ssl\"><a href=\"#双向认证-ssl\" class=\"headerlink\" title=\"双向认证(ssl)\"></a>双向认证(ssl)</h2><p>  额外增加了服务端对客户端的认证</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">\tparticipant Client</span><br><span class=\"line\">\tparticipant Server</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 发送客户端SSL版本信息</span><br><span class=\"line\">\tServer-&gt;&gt;Client: 返回SSL版本，随机数等信息及服务器公钥</span><br><span class=\"line\">\tClient-&gt;&gt;Client: 校验服务器证书是否合法，合法继续，否则告警</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 校验通过后，将自己的证书及公钥发送到服务端</span><br><span class=\"line\">\tServer-&gt;&gt;Server: 服务端校验客户端证书，校验结束后获得客户端公钥</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 客户端发送自己可支持的对称加密方案，供其选择</span><br><span class=\"line\">\tServer-&gt;&gt;Server: 服务端选择加密性高的加密方式</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tServer-&gt;&gt;Client: 将选择好的加密方案使用客户端公钥进行加密后发送给客户端</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 客户端使用私钥解密，产生随机码，作为对称加密密钥，使用服务端公钥加密后发送</span><br><span class=\"line\">\tServer-&gt;&gt;Server: 私钥解密，获取对称加密的密钥</span><br><span class=\"line\">\tClient-&gt;&gt;Server: 开始加密通信</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><br/><br/></p>\n<h2 id=\"数据流情况\"><a href=\"#数据流情况\" class=\"headerlink\" title=\"数据流情况\"></a>数据流情况</h2><p>HTTPS和HTTP一样：</p>\n<ol>\n<li>首先建立TCP连接</li>\n<li>建立之后不是立即发出HTTP请求所要具体资源</li>\n<li>也没有建立真实的TLS/SSL连接，只是在刚刚建立好的TCP连接上，包裹上一层加密协议而已</li>\n<li>在TLS连接协议中交换数据证书</li>\n</ol>\n<p><img src=\"https://pic.downk.cc/item/5fe98f2a3ffa7d37b3bd7f43.jpg\"></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckjb63y5t00011cve4uwgav38","tag_id":"ckjb63y5z00031cvech8f1hdw","_id":"ckjb63y6300071cvea1m2dn3r"},{"post_id":"ckjb63y5t00011cve4uwgav38","tag_id":"ckjb63y6200061cve4vqibqlx","_id":"ckjb63y6300081cve1kkr2v3m"}],"Tag":[{"name":"http通信","_id":"ckjb63y5z00031cvech8f1hdw"},{"name":"安全加密","_id":"ckjb63y6200061cve4vqibqlx"}]}}